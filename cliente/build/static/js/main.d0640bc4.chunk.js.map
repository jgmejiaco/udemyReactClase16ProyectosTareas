{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.jsx","components/tareas/Tarea.jsx","components/tareas/ListadoTareas.jsx","components/proyectos/Proyectos.js","types/index.jsx","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","console","log","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","proyectoId","delete","Provider","children","TareaState","TareaReducer","clientesAxios","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0640bc4.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport {createContext} from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","/* eslint-disable no-unused-vars */\r\nimport {createContext} from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Login = (props) => {\r\n\r\n    //  extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {mensaje, autenticado, iniciarSesion} = authContext;\r\n\r\n    //  En caso de que el password o usuario no exista\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/proyectos');\r\n        }\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history]);\r\n\r\n    // State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    //  Extraer usuario\r\n    const {email, password} = usuario;\r\n\r\n    // Función se ejecuta cada vez que el usuario escribe algo\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //  \r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //  Validar que no haya campos vacios\r\n        if(email.trim() === '' || password.trim() === '') {\r\n            mostrarAlerta('Todos los ca mpos son obligatorios', 'alerta-error');\r\n        }\r\n\r\n        //  Pasarlo al action\r\n        iniciarSesion({email, password});\r\n    }\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n\r\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\r\n\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar Sesión</h1>\r\n\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Iniciar Sesión\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n\r\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\r\n                    Obtener Cuenta\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Login;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useState, useContext, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst NuevaCuenta = (props) => {\r\n\r\n    //  Extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {mensaje, autenticado, registrarUsuario} = authContext;\r\n\r\n    //  En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/proyectos');\r\n        }\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history]);\r\n\r\n\r\n    // State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        confirmar: ''\r\n    });\r\n\r\n    //  Extraer usuario\r\n    const {nombre, email, password, confirmar} = usuario;\r\n\r\n    // Función se ejecuta cada vez que el usuario escribe algo\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //  Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //  Validar que no haya campos vacios\r\n        if( nombre.trim() === '' ||\r\n            email.trim() === '' ||\r\n            password.trim() === '' ||\r\n            confirmar.trim() === '') {\r\n                mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n                return;\r\n            }\r\n\r\n        //  Password mínimo de 6 caractéres\r\n        if(password.length < 6) {\r\n            mostrarAlerta('El password debe ser de al menos 6 caractéres', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        //  Ambos Passwords deben ser iguales\r\n        if(password !== confirmar) {\r\n            mostrarAlerta('Los passwords son diferentes', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        //  Pasarlo al action\r\n        registrarUsuario({\r\n            nombre,\r\n            email,\r\n            password\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Obtener una Cuenta</h1>\r\n\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Tu Nombre\"\r\n                            value={nombre}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"confirmar\">Confirmar</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirmar\"\r\n                            name=\"confirmar\"\r\n                            placeholder=\"Confirmar password\"\r\n                            value={confirmar}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Registrarme\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n\r\n                <Link to={'/'} className=\"enlace-cuenta\">\r\n                    Volver a Iniciar Sesión\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NuevaCuenta;","import {createContext} from 'react';\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;\r\n\r\n\r\n","import React, {Fragment, useState, useContext} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n    //  Obtener el state del formulario\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {formulario, errorformulario, mostrarFormulario, agregarProyecto, mostrarError} = proyectosContext;\r\n\r\n    //  State para Proyecto\r\n    const [proyecto, guardarProyecto] = useState({\r\n        nombre: '',\r\n    });\r\n\r\n    //  Extraer nombre de proyecto\r\n    const {nombre} = proyecto;\r\n\r\n    //  Lee los contenidos del input\r\n    const onChangeProyecto = e => {\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    //  Cuando el ususario en el nombre del proyecto\r\n    const onSubmitProyecto = e => {\r\n        e.preventDefault();\r\n\r\n        //  Validar el proyecto\r\n        if(nombre === '') {\r\n            mostrarError();\r\n            return;\r\n        }\r\n\r\n        //  Agregar al State\r\n        agregarProyecto(proyecto);\r\n\r\n        //  Reiniciar el formulario\r\n        guardarProyecto({\r\n            nombre: ''\r\n        })\r\n\r\n    }\r\n\r\n    //  Mostrar el formulario\r\n    const onClickFormulario = () => {\r\n        mostrarFormulario();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-block btn-primario\"\r\n                // onClick={() => mostrarFormulario()}\r\n                onClick={onClickFormulario}\r\n            >Nuevo Proyecto</button>\r\n\r\n            {\r\n                formulario ?\r\n                    (\r\n                        <form className=\"formulario-nuevo-proyecto\" onSubmit={onSubmitProyecto}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"input-text\"\r\n                                placeholder=\"Nombre Proyecto\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={onChangeProyecto}\r\n                            />\r\n            \r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primario btn-block\"\r\n                                value=\"Agregar Proyecto\"\r\n                            />\r\n                        </form>\r\n                    ) : null\r\n            }\r\n            {errorformulario ? <p className=\"mensaje error\">El nombre del proyecto es obligatorio</p> : null}\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default NuevoProyecto;\r\n","import {createContext} from 'react';\r\n\r\nconst tareaContext = createContext();\r\n \r\nexport default tareaContext;","import React, {useContext} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst Proyecto = ({proyecto}) => {\r\n\r\n    //  Obtener el state de proyectos\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyectoActual} = proyectosContext;\r\n\r\n    //  obtener la función del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const {obtenerTareas} = tareasContext;\r\n\r\n    //  Función para agregar el proyecto actual\r\n    const seleccionarProyecto = id => {\r\n        proyectoActual(id); //  Fijar un proyecto actual\r\n        obtenerTareas(id); //  Filtrar las tareas cuando se de click\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <li>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-blank\"\r\n                onClick={() => seleccionarProyecto(proyecto._id)}\r\n            >{proyecto.nombre}</button>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Proyecto;","import React, {useContext, useEffect} from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst ListadoProyectos = () => {\r\n\r\n    //  Extraer proyectos del State inicial\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {mensaje, proyectos, obtenerProyectos} = proyectosContext;\r\n\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    // Obtener proyectos cuando carga el componente\r\n    useEffect(() => {\r\n        \r\n        // si hay un error\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n\r\n        obtenerProyectos();\r\n        // eslint-disable-next-line\r\n    }, [mensaje]);\r\n\r\n    //  Revisar si proyectos tiene contenido\r\n    if(proyectos.length === 0) return <p>No hay proyectos, comienza creando uno</p>;\r\n    // if(proyectos.length === 0 ) return <p>No hay proyectos, comienza creando uno</p>;\r\n\r\n    return ( \r\n        <ul className=\"listado-proyectos\">\r\n\r\n            { alerta   ? ( <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>  ) : null  }\r\n\r\n            <TransitionGroup>\r\n                {proyectos.map(proyecto => (\r\n                    <CSSTransition\r\n                        key={proyecto._id}\r\n                        timeout={200}\r\n                        classNames=\"proyecto\"\r\n                    >\r\n                        <Proyecto \r\n                            proyecto={proyecto}\r\n                        />\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </ul>\r\n     );\r\n}\r\n \r\nexport default ListadoProyectos;","import React from 'react';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n        <aside>\r\n            <h1>MERN<span>Tasks</span></h1>\r\n            \r\n            <NuevoProyecto />\r\n\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Proyectos</h2>\r\n\r\n                <ListadoProyectos />\r\n            </div>\r\n        </aside>\r\n    );\r\n}\r\n \r\nexport default Sidebar;","import React, {useContext, useEffect} from 'react';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Barra = () => {\r\n\r\n    //  Extraer la información de autenticación\r\n    const authContext = useContext(AuthContext);\r\n    const {usuario, usuarioAutenticado, cerrarSesion} = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return ( \r\n        <header className=\"app-header\">\r\n\r\n            {usuario ? <p className=\"nombre-usuario\">Hola <span> {usuario.nombre} </span></p> : null}\r\n\r\n            <nav className=\"nav-principal\">\r\n                <button\r\n                    className=\"btn btn-blank cerrar-sesion\"\r\n                    onClick={() => cerrarSesion()}\r\n                >Cerrar Sesión</button>\r\n            </nav>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Barra;","import React, {useContext, useState, useEffect} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n\r\n    //  Extraer si un proyecto está activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyecto} = proyectosContext;\r\n\r\n    //  obtener la función del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const {tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea} = tareasContext;\r\n\r\n    //  Effect que detecta si hay una tarea seleccionada\r\n    useEffect(() => {\r\n        if(tareaseleccionada !== null) {\r\n            guardarTarea(tareaseleccionada);\r\n        } else {\r\n            guardarTarea({\r\n                nombre: ''\r\n            })\r\n        }\r\n    }, [tareaseleccionada]);\r\n\r\n    //  State del formulario\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre: ''\r\n    })\r\n\r\n    //  Extraer el nombre del formulario\r\n    const {nombre} = tarea;\r\n\r\n    //  Si no hay proyecto seleccionado\r\n    if(!proyecto) return null;\r\n\r\n    //  Array destructuring para extraer el proyecto actual\r\n    const [proyectoActual] = proyecto;\r\n\r\n    //  Leer los valores del formulario\r\n    const handleChange = e => {\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //  Función Submit\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //  Validar\r\n        if(nombre.trim() === '') {\r\n            validarTarea();\r\n            return;\r\n        }\r\n\r\n        //  Si es edición o si es nueva tarea\r\n        if(tareaseleccionada === null) {\r\n            //  Agregar la nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id;\r\n            agregarTarea(tarea);\r\n        } else {\r\n            //  Actualizar tarea existente\r\n            actualizarTarea(tarea);\r\n\r\n            //  Elimina tarea seleccionada del state\r\n            limpiarTarea();\r\n        }\r\n\r\n        //  Obtener y filtrar las tareas del proyecto actual\r\n        obtenerTareas(proyectoActual.id);\r\n\r\n        //  Reiniciar el form\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n    }\r\n    \r\n    return ( \r\n        <div className=\"formulario\">\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre Tarea...\"\r\n                        name=\"nombre\"\r\n                        value = {nombre}\r\n                        onChange = {handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormTarea;","import React, {useContext} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst Tarea = ({tarea}) => {\r\n    //  Extraer si un proyecto está activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyecto} = proyectosContext;\r\n\r\n    //  obtener la función del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const {eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual} = tareasContext;\r\n\r\n    //  Extraer el proyecto\r\n    const [proyectoActual] = proyecto;\r\n\r\n    //  Función que se ejecuta cuando el usuario presiona el btn de elmomar tarea\r\n    const tareaEliminar = id => {\r\n        eliminarTarea(id, proyectoActual._id);\r\n        obtenerTareas(proyectoActual.id);\r\n    }\r\n\r\n    //  Función que modifica el estado de las tareas\r\n    const cambiarEstado =  tarea => {\r\n        if(tarea.estado) {\r\n            tarea.estado = false;\r\n        } else {\r\n            tarea.estado = true;\r\n        }\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    //  Agrega una tarea actual cuando el usuario desea editarla\r\n    const seleccionarTarea =  tarea => {\r\n        guardarTareaActual(tarea);\r\n    }\r\n\r\n    return ( \r\n        <li className=\"tarea sombra\">\r\n            <p>{tarea.nombre}</p>\r\n\r\n            <div className=\"estado\">\r\n                {tarea.estado\r\n                    ? (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"completo\"\r\n                            onClick={() => cambiarEstado(tarea)}\r\n                        >Completo</button>\r\n                    )\r\n                    : (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"incompleto\"\r\n                            onClick={() => cambiarEstado(tarea)}\r\n                        >Incompleto</button>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div className=\"acciones\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                    onClick={() => seleccionarTarea(tarea)}\r\n                >Editar</button>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                    onClick={() => tareaEliminar(tarea._id)}\r\n                >Eliminar</button>\r\n                  \r\n            </div>\r\n        </li> );\r\n}\r\nexport default Tarea;","import React, {Fragment, useContext} from 'react';\r\nimport Tarea from './Tarea';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nconst ListadoTareas = () => {\r\n\r\n    //  Extraer proyectos de state inicial\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyecto, eliminarProyecto} = proyectosContext;\r\n\r\n    //  obtener las tareas del proyecto\r\n    const tareasContext = useContext(tareaContext);\r\n    const {tareasproyecto} = tareasContext;\r\n\r\n    //  Si no hay proyecto seleccionado\r\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>;\r\n\r\n    //  Array destructuring para extraer el proyecto actual\r\n    const [proyectoActual] = proyecto;\r\n\r\n    // const tareasProyecto = [];\r\n\r\n    //  Elimina un proyecto\r\n    const onClickEliminar = () => {\r\n        eliminarProyecto(proyectoActual._id);\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Proyecto: {proyectoActual.nombre}</h2>\r\n\r\n            <ul className=\"listado-tareas\">\r\n                {tareasproyecto.length === 0\r\n                ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\r\n\r\n                : \r\n                <TransitionGroup>\r\n                    {tareasproyecto.map(tarea => (\r\n                        <CSSTransition\r\n                            key={tarea.id}\r\n                            timeout={200}\r\n                            classNames=\"tarea\"\r\n                        >\r\n                            <Tarea\r\n                                tarea={tarea}\r\n                            />\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            }\r\n            </ul>\r\n\r\n            <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-eliminar\"\r\n                    onClick={onClickEliminar}\r\n            >Eliminar Proyecto &times;</button>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default ListadoTareas;\r\n","import React, {useContext, useEffect} from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTarea from '../tareas/FormTarea';\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Proyectos = () => {\r\n\r\n    //  Extraer la información de autenticación\r\n    const authContext = useContext(AuthContext);\r\n    const {usuarioAutenticado} = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return ( \r\n        <div className=\"contenedor-app\">\r\n           \r\n           <Sidebar />\r\n\r\n            <div className=\"seccion-principal\">\r\n                <Barra />\r\n\r\n                <main>\r\n                    <FormTarea />\r\n\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas />\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Proyectos;","//  Los types describen lo que está pasando en la aplicación\r\nexport const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO'\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS'\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\n\r\nexport const CERRAR_SESION = 'CERRAR_SESION';\r\n\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { \r\n    FORMULARIO_PROYECTO, \r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO,\r\n    PROYECTO_ERROR\r\n} from '../../types';\r\n\r\n//  El Reducer cambia el State\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case FORMULARIO_PROYECTO:\r\n            return {\r\n                ...state,\r\n                formulario: true\r\n            }\r\n        case OBTENER_PROYECTOS:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n        case AGREGAR_PROYECTO:\r\n            return {\r\n                ...state,\r\n                proyectos: [...state.proyectos, action.payload],\r\n                formulario: false,\r\n                errorformulario: false\r\n            }\r\n        case VALIDAR_FORMULARIO:\r\n            return {\r\n                ...state, \r\n                errorformulario: true\r\n            }\r\n        case PROYECTO_ACTUAL:\r\n            return {\r\n                ...state,\r\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\r\n            }\r\n        case ELIMINAR_PROYECTO:\r\n            return {\r\n                ...state,\r\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\r\n                proyecto: null\r\n            }\r\n        case PROYECTO_ERROR:\r\n            return {\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n  baseURL : process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, {useReducer} from 'react';\r\n\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport { \r\n    FORMULARIO_PROYECTO, \r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO,\r\n    PROYECTO_ERROR,\r\n    // VALIDAR_FORMULARIO,\r\n} from '../../types';\r\n\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props => {\r\n\r\n    const initialState = {\r\n        proyectos : [],\r\n        formulario : false,\r\n        errorformulario : false,\r\n        proyecto : null,\r\n        mensaje : null\r\n    }\r\n\r\n    //  Dispatch para ejecutar las accciones\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\r\n\r\n    //  Serie de funciones para el CRUD (Create, Read, Update y Delete)\r\n    const mostrarFormulario = () => {\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n    \r\n    //  Obtener los Proyectos\r\n    const obtenerProyectos = async () => {\r\n        try {\r\n\r\n            const resultado =  await clienteAxios.get('/api/proyectos');\r\n\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            })\r\n            \r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n             dispatch({\r\n                 type: PROYECTO_ERROR,\r\n                 payload: alerta\r\n             })\r\n        }\r\n    }\r\n\r\n    //  Agregar nuevo proyecto\r\n    const agregarProyecto = async proyecto => {\r\n\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\r\n            console.log(resultado);\r\n            // Insertar el proyecto en el state\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n             dispatch({\r\n                 type: PROYECTO_ERROR,\r\n                 payload: alerta\r\n             })\r\n        }\r\n    }\r\n\r\n    //  Validar formulario por errores\r\n    const mostrarError = () => {\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    //  Selecciona el proyecto que el usuario dió click\r\n    const proyectoActual = proyectoId => {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n    //  Elimina un proyecto\r\n    const eliminarProyecto = async proyectoId => {\r\n       try {\r\n           await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n            dispatch({\r\n                type: ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            })\r\n       } catch (error) {\r\n           const alerta = {\r\n               msg: 'Hubo un error',\r\n               categoria: 'alerta-error'\r\n           }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n       }\r\n    }\r\n\r\n    return (\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos: state.proyectos,\r\n                formulario: state.formulario, // State de una sola palabra en minúsculas\r\n                errorformulario: state.errorformulario,\r\n                proyecto: state.proyecto,\r\n                mensaje: state.mensaje,\r\n                mostrarFormulario, // las funciones de 2 palabras con camelCase\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case TAREAS_PROYECTO:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            }\r\n        case AGREGAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: [action.payload, ...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n\r\n        case VALIDAR_TAREA:\r\n            return {\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n\r\n        case ELIMINAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea)\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return {\r\n                ...state,\r\n                tareaseleccionada: action.payload\r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareaseleccionada: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n ","import React, {useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\n\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA,\r\n} from '../../types';\r\n\r\nimport clientesAxios from '../../config/axios';\r\n\r\nconst TareaState = props => {\r\n    const initialState = {\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaseleccionada: null\r\n    }\r\n\r\n    //  Crear dispatch y State\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n    //  Crear las funciones\r\n\r\n    //  Obtener las tareas de un proyecto\r\n    const obtenerTareas = async proyecto => {\r\n        console.log(proyecto);\r\n        try {\r\n            const resultado = await clientesAxios.get('/api/tareas', {params: {proyecto}});\r\n            console.log(resultado);\r\n\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n    \r\n    //  Agregar una tarea al proyecto seleccionado\r\n    const agregarTarea = async tarea => {\r\n        console.log(tarea);\r\n        try {\r\n            const resultado = await clientesAxios.post('/api/tareas', tarea);\r\n            console.log(resultado);\r\n\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //  Valida y muestra un error en caso de que sea necesario\r\n    const validarTarea = () => {\r\n        dispatch({\r\n            type: VALIDAR_TAREA, // NO toma payload porque no hay parámetro\r\n        })\r\n    }\r\n\r\n    //  Eliminar tarea por id\r\n    const eliminarTarea = async (id, proyecto) => {\r\n        try {\r\n            await clientesAxios.delete(`/api/tareas/${id}`, {params: {proyecto}});\r\n            \r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            })    \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    //  Edita o modifica una tarea\r\n    const actualizarTarea = async tarea =>  {\r\n        console.log(tarea);\r\n\r\n        try {\r\n            const resultado = await clientesAxios.put(`/api/tareas/${tarea._id}`, tarea);\r\n            console.log(resultado);\r\n\r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    //  Extrae una tarea para edición\r\n    const guardarTareaActual = tarea =>  {\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n  \r\n    //  Elimina la tarea seleccionada\r\n    const limpiarTarea = () =>  {\r\n        dispatch({\r\n            type: LIMPIAR_TAREA,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;\r\n","import {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\n\r\n/* eslint-disable import/no-anonymous-default-export */\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case MOSTRAR_ALERTA:\r\n            return {\r\n                alerta: action.payload\r\n            }\r\n            case OCULTAR_ALERTA:\r\n                return {\r\n                    alerta: null\r\n                }\r\n\r\n\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport alertaReducer from './alertaReducer';\r\nimport alertaContext from './alertaContext';\r\n\r\nimport {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\n\r\nconst AlertaState = props => {\r\n    const initialState = {\r\n        alerta: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\r\n\r\n    //  Funciones\r\n    const mostrarAlerta = (msg, categoria) => {\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n\r\n        //  Después de 5 segundos limpia la alerta\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: OCULTAR_ALERTA\r\n            })\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <alertaContext.Provider\r\n            value = {{\r\n                alerta: state.alerta,\r\n                mostrarAlerta        \r\n            }}\r\n        >\r\n            {props.children}\r\n            \r\n        </alertaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertaState;","import {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\n/* eslint-disable import/no-anonymous-default-export */\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case REGISTRO_EXITOSO:\r\n        case LOGIN_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:    \r\n        case LOGIN_ERROR:    \r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                usuario: null,\r\n                autenticado: null,\r\n                mensaje: action.payload,\r\n                cargando: false\r\n            }\r\n        case OBTENER_USUARIO:\r\n            return {\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload,\r\n                cargando: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import clienteAxios from './axios';\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React, {useReducer} from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\n\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/token';\r\n\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null,\r\n        cargando: true\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n    const registrarUsuario = async datos  => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\r\n            console.log(respuesta.data);\r\n\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n            //  Obtener el usuario\r\n            usuarioAutenticado();\r\n\r\n        } catch (error) {\r\n            // console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    //  Retorna el usuario autenticado\r\n    const usuarioAutenticado = async () => {\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token) {\r\n            tokenAuth(token);\r\n        }\r\n\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            console.log(respuesta);\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n        }\r\n    }\r\n\r\n    //  Cuando el usuario inicia sesión\r\n    const iniciarSesion = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth', datos);\r\n            console.log(respuesta);\r\n\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n            //  Obtener el usuario\r\n            usuarioAutenticado();\r\n\r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: alerta\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    //  Cierra la sesión del usuario \r\n    const cerrarSesion = () => {\r\n        dispatch({\r\n            type: CERRAR_SESION,\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                cargando: state.cargando,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                usuarioAutenticado,\r\n                cerrarSesion\r\n            }}\r\n        >{props.children}\r\n\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\nexport default AuthState;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useContext, useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n//  Higher order component\r\nconst RutaPrivada = ({component: Component, ...props}) => {\r\n\r\n    console.log();\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {autenticado, cargando, usuarioAutenticado} = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return(\r\n        <Route { ...props } render={props => !autenticado && !cargando ? (\r\n            <Redirect to=\"/\"  />\r\n            ) : (\r\n                <Component {...props} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RutaPrivada;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\n\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/token';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n//  Revisar si tenemos un token\nconst token = localStorage.getItem('token');\nif(token) {\n  tokenAuth(token);\n}\n\nfunction App() {\n\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router> {/* Lo que esté dentro del Router pero fuera del switch se verá en todas las páginas */}\n              <Switch> {/* Lo que esté dentro del Switch es la lista de páginas */}\n                <Route exact path=\"/\" component={Login} /> {/*Usuario para autenticar*/}\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} /> {/*Se crea nueva cuenta*/}\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} /> {/*Usuario ya autenticado*/}\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}